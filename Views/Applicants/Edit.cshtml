@model SocialAssistanceFundMisMcv.ViewModels.ApplicantViewModel

@{
    bool isReadOnly = ViewData["IsReadOnly"] != null && (bool)ViewData["IsReadOnly"];
    bool isEdit = Model?.Id > 0;
    string formAction = "Edit";
}

<div class="container mt-4">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">
                @((isEdit && !isReadOnly) ? "Update" : isReadOnly ? "View" : "Create") Applicant
            </h4>
        </div>

        <div class="card-body">
            <form asp-action="@formAction" method="post">
                <input type="hidden" asp-for="Id" />

                <div class="row g-3">
                    <div class="col-md-4">
                        <label asp-for="FirstName" class="form-label fw-semibold">First Name</label>
                        <input asp-for="FirstName" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="FirstName" class="text-danger small"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="MiddleName" class="form-label fw-semibold">Middle Name</label>
                        <input asp-for="MiddleName" class="form-control" readonly="@(isReadOnly)" />
                    </div>

                    <div class="col-md-4">
                        <label asp-for="LastName" class="form-label fw-semibold">Last Name</label>
                        <input asp-for="LastName" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="LastName" class="text-danger small"></span>
                    </div>

                    <div class="col-md-3">
                        <label asp-for="SexId" class="form-label fw-semibold">Sex</label>
                        <select asp-for="SexId" asp-items="@(new SelectList(Model.Sexes, "Id", "Name"))"
                                class="form-select" readonly="@(isReadOnly)">
                            <option value="">-- Select Sex --</option>
                        </select>
                        <span asp-validation-for="SexId" class="text-danger small"></span>
                    </div>

                    <div class="col-md-3">
                        <label asp-for="Dob" class="form-label fw-semibold">Date of Birth</label>
                        <input asp-for="Dob" type="date" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="Dob" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="MaritalStatusId" class="form-label fw-semibold">Marital Status</label>
                        <select asp-for="MaritalStatusId" asp-items="@(new SelectList(Model.MaritalStatuses, "Id", "Name"))"
                                class="form-select" readonly="@(isReadOnly)">
                            <option value="">-- Select Marital Status --</option>
                        </select>
                        <span asp-validation-for="MaritalStatusId" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="VillageId" class="form-label fw-semibold">Geographical Location</label>
                        <select asp-for="VillageId" asp-items="@(new SelectList(Model.Villages, "Id", "Name"))"
                                class="form-select" readonly="@(isReadOnly)">
                            <option value="">-- Select Location --</option>
                        </select>
                        <span asp-validation-for="VillageId" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="IdentityCardNumber" class="form-label fw-semibold">Identity Card Number</label>
                        <input asp-for="IdentityCardNumber" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="IdentityCardNumber" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="PostalAddress" class="form-label fw-semibold">Postal Address</label>
                        <input asp-for="PostalAddress" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="PostalAddress" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="PhysicalAddress" class="form-label fw-semibold">Physical Address</label>
                        <input asp-for="PhysicalAddress" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="PhysicalAddress" class="text-danger small"></span>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Phone Numbers</label>
                        <div id="phoneNumbersContainer">
                            @if (Model.PhoneNumbers != null && Model.PhoneNumbers.Any())
                            {
                                var phoneNumbersList = Model.PhoneNumbers.ToList(); // Convert to List

                                for (int i = 0; i < phoneNumbersList.Count; i++)
                                {
                                    <div class="phone-number-entry d-flex align-items-center">
                                        <select name="PhoneNumbers[@i].PhoneNumberTypeId" class="form-control me-2">
                                            <option value="">-- Select Type --</option>
                                            @foreach (var type in Model.PhoneNumberTypes)
                                            {
                                                <option value="@type.Id" selected="@(phoneNumbersList[i].PhoneNumberTypeId == type.Id ? "selected" : null)">
                                                    @type.Name
                                                </option>
                                            }
                                        </select>
                                        <input name="PhoneNumbers[@i].PhoneNumber" class="form-control me-2" value="@phoneNumbersList[i].PhoneNumber" placeholder="Enter Phone Number" />
                                        <button type="button" class="btn btn-danger remove-phone" onclick="removePhoneNumber(this)">X</button>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-success btn-sm" onclick="addPhoneNumber()" @(isReadOnly ? "disabled" : "")>
                        <i class="bi bi-plus-circle"></i> Add Phone Number
                    </button>
        
                <hr />
                <div class="d-flex justify-content-end gap-2 mt-3">
                    @if (!isReadOnly)
                    {
                        <button type="submit" class="btn btn-primary px-4">Save Changes</button>
                    }
                    <a asp-action="Index" class="btn btn-secondary px-4">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let phoneIndex = 1;
        let phoneTypes = @Html.Raw(Json.Serialize(Model.PhoneNumberTypes));

        function addPhoneNumber() {
            let container = document.getElementById("phoneNumbersContainer");
            let newField = document.createElement("div");
            newField.classList.add("phone-number-entry", "d-flex", "align-items-center");

            let options = phoneTypes.map(type => `<option value="${type.id}">${type.name}</option>`).join("");

            newField.innerHTML = `
                <select name="PhoneNumbers[${phoneIndex}].PhoneNumberTypeId" class="form-control me-2">
                    <option value="">-- Select Type --</option>
                    ${options}
                </select>
                <input name="PhoneNumbers[${phoneIndex}].PhoneNumber" class="form-control me-2" placeholder="Enter Phone Number" />
                <button type="button" class="btn btn-danger remove-phone" onclick="removePhoneNumber(this)">X</button>
            `;
            container.appendChild(newField);
            phoneIndex++;
        }

        function removePhoneNumber(button) {
            button.parentElement.remove();
        }
    </script>

}