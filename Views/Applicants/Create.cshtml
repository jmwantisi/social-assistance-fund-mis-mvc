@model SocialAssistanceFundMisMcv.ViewModels.ApplicantViewModel

@{
    bool isReadOnly = ViewData["IsReadOnly"] != null && (bool)ViewData["IsReadOnly"];
    string formAction = Model.Id == 0 ? "Create" : "Edit";
}

<div class="container">
    <h2>@(isReadOnly ? "View Applicant" : "Create Applicant")</h2>

    <form asp-action="@formAction" method="post">
        <div class="mb-3">
            <label asp-for="FirstName" class="form-label">First Name</label>
            <input asp-for="FirstName" class="form-control" readonly="@(isReadOnly)" />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="MiddleName" class="form-label">Middle Name</label>
            <input asp-for="MiddleName" class="form-control" readonly="@(isReadOnly)" />
        </div>

        <div class="mb-3">
            <label asp-for="LastName" class="form-label">Last Name</label>
            <input asp-for="LastName" class="form-control" readonly="@(isReadOnly)" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="SexId" class="form-label">Sex</label>
            <select asp-for="SexId" asp-items="@(new SelectList(Model.Sexes, "Id", "Name"))" class="form-control" readonly="@(isReadOnly)">
                <option value="">-- Select Sex --</option>
            </select>
            <span asp-validation-for="SexId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Dob" class="form-label">Date of Birth</label>
            <input asp-for="Dob" type="date" class="form-control" readonly="@(isReadOnly)" />
            <span asp-validation-for="Dob" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="MaritalStatusId" class="form-label">Marital Status</label>
            <select asp-for="MaritalStatusId" asp-items="@(new SelectList(Model.MaritalStatuses, "Id", "Name"))" class="form-control" readonly="@(isReadOnly)">
                <option value="">-- Select Marital Status --</option>
            </select>
            <span asp-validation-for="MaritalStatusId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="VillageId" class="form-label">Geographical Location</label>
            <div class="col-md-12">
                <select asp-for="VillageId" asp-items="@(new SelectList(Model.Villages, "Id", "Name"))" class="form-control" readonly="@(isReadOnly)">
                    <option value="">-- Select Location --</option>
                </select>
                <span asp-validation-for="VillageId" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3">
            <label asp-for="IdentityCardNumber" class="form-label">Identity Card Number</label>
            <input asp-for="IdentityCardNumber" class="form-control" readonly="@(isReadOnly)" />
            <span asp-validation-for="IdentityCardNumber" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="PostalAddress" class="form-label">Postal Address</label>
            <input asp-for="PostalAddress" class="form-control" readonly="@(isReadOnly)" />
            <span asp-validation-for="PostalAddress" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="PhysicalAddress" class="form-label">Physical Address</label>
            <input asp-for="PhysicalAddress" class="form-control" readonly="@(isReadOnly)" />
            <span asp-validation-for="PhysicalAddress" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Phone Numbers</label>
            <div id="phoneNumbersContainer">
                <div class="phone-number-entry d-flex align-items-center">
                    <select name="PhoneNumbers[0].PhoneNumberTypeId" class="form-control me-2" @(isReadOnly ? "disabled" : "")>
                        <option value="">-- Select Type --</option>
                        @if (Model?.PhoneNumberTypes != null && Model.PhoneNumberTypes.Any())
                        {
                            foreach (var type in Model.PhoneNumberTypes)
                            {
                                <option value="@type.Id">@type.Name</option>
                            }
                        }
                    </select>

                    <input name="PhoneNumbers[0].PhoneNumber" class="form-control me-2" placeholder="Enter Phone Number" @(isReadOnly ? "readonly" : "") />
                    <button type="button" class="btn btn-danger remove-phone" onclick="removePhoneNumber(this)" @(isReadOnly ? "disabled" : "")>X</button>
                </div>
            </div>
            <button type="button" class="btn btn-success mt-2" onclick="addPhoneNumber()" @(isReadOnly ? "disabled" : "")>Add Phone Number</button>
        </div>

        @if (!isReadOnly)
        {
            <button type="submit" class="btn btn-primary">Submit</button>
        }
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let phoneIndex = 1;

        function addPhoneNumber() {
            let container = document.getElementById("phoneNumbersContainer");
            let newField = document.createElement("div");
            newField.classList.add("phone-number-entry", "d-flex", "align-items-center");
            newField.innerHTML = `
                <select name="PhoneNumbers[${phoneIndex}].PhoneNumberTypeId" class="form-control me-2" ${(isReadOnly ? "disabled" : "")}>
                    <option value="">-- Select Type --</option>
                    @foreach (var type in Model.PhoneNumberTypes)
                    {
                        <option value="@type.Id">@type.Name</option>
                    }
                </select>
                <input name="PhoneNumbers[${phoneIndex}].PhoneNumber" class="form-control me-2" placeholder="Enter Phone Number" ${(isReadOnly ? "readonly" : "")}/>
                <button type="button" class="btn btn-danger remove-phone" onclick="removePhoneNumber(this)" ${(isReadOnly ? "disabled" : "")}>X</button>
            `;
            container.appendChild(newField);
            phoneIndex++;
        }

        function removePhoneNumber(button) {
            button.parentElement.remove();
        }
    </script>
}
