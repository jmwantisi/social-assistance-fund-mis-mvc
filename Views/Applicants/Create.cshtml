@model SocialAssistanceFundMisMcv.ViewModels.ApplicantViewModel

@{
    bool isReadOnly = ViewData["IsReadOnly"] != null && (bool)ViewData["IsReadOnly"];
    bool isEdit = Model?.Id > 0;
    string formAction = isEdit ? "Edit" : "Create";
}

<div class="container mt-4">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">
                @((isEdit && !isReadOnly) ? "Update" : isReadOnly ? "View" : "Create") Applicant
            </h4>
        </div>

        <div class="card-body">
            <form asp-action="@formAction" method="post">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label asp-for="FirstName" class="form-label fw-semibold">First Name</label>
                        <input asp-for="FirstName" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="FirstName" class="text-danger small"></span>
                    </div>

                    <div class="col-md-4">
                        <label asp-for="MiddleName" class="form-label fw-semibold">Middle Name</label>
                        <input asp-for="MiddleName" class="form-control" readonly="@(isReadOnly)" />
                    </div>

                    <div class="col-md-4">
                        <label asp-for="LastName" class="form-label fw-semibold">Last Name</label>
                        <input asp-for="LastName" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="LastName" class="text-danger small"></span>
                    </div>

                    <div class="col-md-3">
                        <label asp-for="SexId" class="form-label fw-semibold">Sex</label>
                        <select asp-for="SexId" asp-items="@(new SelectList(Model.Sexes, "Id", "Name"))"
                                class="form-select" readonly="@(isReadOnly)">
                            <option value="">-- Select Sex --</option>
                        </select>
                        <span asp-validation-for="SexId" class="text-danger small"></span>
                    </div>

                    <div class="col-md-3">
                        <label asp-for="Dob" class="form-label fw-semibold">Date of Birth</label>
                        <input asp-for="Dob" type="date" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="Dob" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="MaritalStatusId" class="form-label fw-semibold">Marital Status</label>
                        <select asp-for="MaritalStatusId" asp-items="@(new SelectList(Model.MaritalStatuses, "Id", "Name"))"
                                class="form-select" readonly="@(isReadOnly)">
                            <option value="">-- Select Marital Status --</option>
                        </select>
                        <span asp-validation-for="MaritalStatusId" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="VillageId" class="form-label fw-semibold">Geographical Location</label>
                        <select asp-for="VillageId" asp-items="@(new SelectList(Model.Villages, "Id", "Name"))"
                                class="form-select" readonly="@(isReadOnly)">
                            <option value="">-- Select Location --</option>
                        </select>
                        <span asp-validation-for="VillageId" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="IdentityCardNumber" class="form-label fw-semibold">Identity Card Number</label>
                        <input asp-for="IdentityCardNumber" class="form-control" maxlength="20" readonly="@(isReadOnly)" />
                        <span asp-validation-for="IdentityCardNumber" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="Email" class="form-label fw-semibold">Email</label>
                        <input asp-for="Email" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="Email" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="PostalAddress" class="form-label fw-semibold">Postal Address</label>
                        <input asp-for="PostalAddress" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="PostalAddress" class="text-danger small"></span>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="PhysicalAddress" class="form-label fw-semibold">Physical Address</label>
                        <input asp-for="PhysicalAddress" class="form-control" readonly="@(isReadOnly)" />
                        <span asp-validation-for="PhysicalAddress" class="text-danger small"></span>
                    </div>
                </div>

                <hr class="my-4" />
                <h5 class="fw-bold">Phone Numbers</h5>
                <div class="mb-3" id="phoneNumbersContainer">
                    <div class="phone-number-entry d-flex gap-2 mb-2">
                        <select name="PhoneNumbers[0].PhoneNumberTypeId" class="form-select w-25" @(isReadOnly ? "disabled" : "")>
                            <option value="">-- Select Type --</option>

                            @foreach (var type in Model.PhoneNumberTypes)
                            {
                                <option value="@type.Id">@type.Name</option>
                            }
                        </select>
                        <input name="PhoneNumbers[0].PhoneNumber" class="form-control" placeholder="Enter Phone Number" @(isReadOnly ? "readonly" : "") />
                        <button type="button" class="btn btn-outline-danger" onclick="removePhoneNumber(this)" @(isReadOnly ? "disabled" : "")>
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
                <button type="button" class="btn btn-outline-success btn-sm" onclick="addPhoneNumber()" @(isReadOnly ? "disabled" : "")>
                    <i class="bi bi-plus-circle"></i> Add Phone Number
                </button>

                <hr />
                <div class="d-flex justify-content-end gap-2">
                    @if (!isReadOnly)
                    {
                        <button type="submit" class="btn btn-primary px-4">Submit</button>
                    }
                    <a asp-action="Index" class="btn btn-secondary px-4">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        let phoneIndex = 1;

        function addPhoneNumber() {
            const container = document.getElementById("phoneNumbersContainer");
            const newDiv = document.createElement("div");
            newDiv.className = "phone-number-entry d-flex gap-2 mb-2";
            newDiv.innerHTML = `
                <select name="PhoneNumbers[${phoneIndex}].PhoneNumberTypeId" class="form-select w-25" ${(isReadOnly ? "disabled" : "")}>
                    <option value="">-- Select Type --</option>
                    @foreach (var type in Model.PhoneNumberTypes)
                    {
                        <option value="@type.Id">@type.Name</option>
                    }
                </select>
                <input name="PhoneNumbers[${phoneIndex}].PhoneNumber" class="form-control" placeholder="Enter Phone Number" ${(isReadOnly ? "readonly" : "")}/>
                <button type="button" class="btn btn-outline-danger" onclick="removePhoneNumber(this)" ${(isReadOnly ? "disabled" : "")}>
                    <i class="bi bi-trash"></i>
                </button>
            `;
            container.appendChild(newDiv);
            phoneIndex++;
        }

        function removePhoneNumber(button) {
            button.closest('.phone-number-entry').remove();
        }
    </script>
}
